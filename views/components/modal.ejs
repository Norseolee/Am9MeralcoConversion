<!-- Add User Modal -->
<div id="addUserModal" class="modal">
    <div class="modal-content">
        <div class="model-title">
            <h2>Add New User</h2>
            <span class="close" data-modal="addUserModal">&times;</span>
        </div>

        <form id="addUserForm" method="POST" action="user_process/add-user">
   
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required>

            <label for="password">Password:</label>
            <input type="text" id="password" name="password" required>

            <label for="role">Role:</label>
            <select id="role" name="role" required>
                <option value="">Select Role</option>
                <% roles.forEach(role => { %>
                    <option value="<%= role.role_id %>"><%= role.roles_name %></option>
                <% }) %>
            </select>
            <br>
            <button class="button" type="submit">Add User</button>
            <br>
        </form>
    </div>
</div>

<!-- Add Tenant Modal -->
<div id="tenantUserModal" class="modal">
    <div class="modal-content">
        <div class="model-title">
            <h2>Add Tenant</h2>
            <span class="close" data-modal="tenantUserModal">&times;</span>
        </div>


        <form id="addTenantForm" method="POST" action="tenant_process/add-tenant" enctype="multipart/form-data">
            <h3>Primary Information</h3>
            <div>
                <label for="business_name">Business Name:</label>
                <input type="text" id="business_name" name="business_name" required>

                <label for="unit">Unit: </label>
                <input type="text" id="unit" name="unit" required>
            </div>
            <div>
                <label for="full_name">Full name:</label>
                <input type="text" id="full_name" name="full_name" required>
            </div>
            <div>
                <label for="email">Email:</label>
                <input type="text" id="email" name="email" required>
                <label for="contact_number">Contact Number:</label>
                <input type="text" id="contact_number" name="contact_number" required>
            </div>
            <div>
                <label for="lease_start">Lease Start:</label>
                <input type="date" id="lease_start" name="lease_start" required>
                <label for="lease_end">Lease End:</label>
                <input type="date" id="lease_end" name="lease_end" required>
            </div>

            <br>
            <h3>Documents</h3>

            <div>
                <label for="image_id_front"> ID FRONT:</label>
                <input type="file" id="image_id_front" name="image_id_front" accept="image/*" >
                <label for="image_id_back"> ID BACK:</label>
                <input type="file" id="image_id_back" name="image_id_back" accept="image/*" >
            </div>
            <div>
                <label for="signature">Signature:</label>
                <input type="file" id="signature" name="signature" accept="image/*" >
            </div>

            <div>
                <img id="previewSignature" src="#" alt="Signature Preview" style="display: none;">
                <img id="previewImageIdFront" src="#" alt="Valid Id Preview Front" style="display: none;">
                <img id="previewImageIdBack" src="#" alt="Valid Id  Preview Back" style="display: none;">
            </div>

            <input type="hidden" name="status" value="active">
            
            <br>
            <button type="submit" class="button">Add User</button>
            <br>
        </form>
    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
    const signatureInput = document.getElementById('signature');
    const idFront = document.getElementById('image_id_front');
    const idBack = document.getElementById('image_id_back');
    const previewSignature = document.getElementById('previewSignature');
    const previewIdFront = document.getElementById('previewImageIdFront');
    const previewIdBack = document.getElementById('previewImageIdBack');

    signatureInput.addEventListener('change', async function(event) {
        const file = this.files[0];
        if (file) {
            const formData = new FormData();
            formData.append('signature', file);

            try {
                const response = await fetch('/preview', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Failed to upload image');
                }

                const data = await response.json();
                previewSignature.src = data.base64Image;
                previewSignature.style.display = 'block';
            } catch (error) {
                console.error('Error:', error);
            }
        } else {
            previewSignature.src = '#';
            previewSignature.style.display = 'none';
        }
    });

    idFront.addEventListener('change', async function(event) {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                previewIdFront.src = e.target.result;
                previewIdFront.style.display = 'block';
            }
            reader.readAsDataURL(file);
        } else {
            previewIdFront.src = '#';
            previewIdFront.style.display = 'none';
        }
    });

    idBack.addEventListener('change', async function(event) {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                previewIdBack.src = e.target.result;
                previewIdBack.style.display = 'block';
            }
            reader.readAsDataURL(file);
        } else {
            previewIdBack.src = '#';
            previewIdBack.style.display = 'none';
        }
    });


    // Function to handle opening modals
    function openModal(modalId) {
        var modal = document.getElementById(modalId);
        modal.style.display = "block";
    }

    // Function to handle closing modals
    function closeModal(modalId) {
        var modal = document.getElementById(modalId);
        modal.style.display = "none";
    }

    // Function to handle button clicks
    function handleButtonClick(event) {
        switch (event.target.id) {
            case 'addUserBtn':
                openModal('addUserModal');
                break;
            case 'tenantUserBtn':
                openModal('tenantUserModal');
                break;
        }
    }

    // Function to handle close button clicks
    function handleCloseClick(event) {
        var modalId = event.target.getAttribute('data-modal');
        closeModal(modalId);
    }

    // Add event listeners to buttons
    var addUserBtn = document.getElementById("addUserBtn");
    if (addUserBtn) {
        addUserBtn.addEventListener("click", handleButtonClick);
    }

    var tenantUserBtn = document.getElementById("tenantUserBtn");
    if (tenantUserBtn) {
        tenantUserBtn.addEventListener("click", handleButtonClick);
    }

    // Add event listeners to close spans
    var closeSpans = document.getElementsByClassName("close");
    for (var i = 0; i < closeSpans.length; i++) {
        closeSpans[i].addEventListener("click", handleCloseClick);
    }

    // Event listener for window click to close modals
    window.addEventListener("click", function(event) {
        if (event.target.classList.contains('modal')) {
            event.target.style.display = "none";
        }
    });
});

</script>
